(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{574:function(e,t,a){"use strict";a.r(t);var o=a(1),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"himalia"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#himalia"}},[e._v("#")]),e._v(" Himalia")]),e._v(" "),a("p",[e._v("Himalia is the general name of the SDK library of the pallet-contracts contract module built by Patract for a series of access chains in different languages. For Substrate, there are already some SDKs for access chains in different languages. However, due to the particularity of the "),a("code",[e._v("pallet-contracts")]),e._v(" module, it is necessary to continue to build an SDK based on the access contract module on the SDK of the access chain. Its particularity is mainly manifested in:")]),e._v(" "),a("ul",[a("li",[e._v("The deployment and invocation of the contract (including rpc invocation and transaction invocation) need to be based on the order and coding of the information provided by the contract's metadata.json (similar to Solidity's abi file), and the chain's metadata can only inform the chain's SDK There are methods such as "),a("code",[e._v("instantiate")]),e._v(" and "),a("code",[e._v("call")]),e._v(" of the contract module on this chain, and it is impossible to inform the call parameter information of a certain contract. Therefore, for contracts, it is necessary to build a function that can parse and support contract metadata.")]),e._v(" "),a("li",[e._v("The event of the contract also needs to be parsed according to the metadata.json of the contract. Therefore, if you use the chain's SDK, you can only monitor the event of the contract module, but you cannot parse the content of the event. Therefore, it is necessary to provide the sdk of the contract to support event monitoring.")]),e._v(" "),a("li",[e._v("The state (storage) of the contract is located in the subtree, and its key encoding and distribution method are inconsistent with the runtime. The code distribution method of the key stored in the contract is related to the contract language framework used by the contract (for example, the implementation of Ask! may be different from ink!), so it is necessary to implement corresponding storage analysis methods for different contract language frameworks. At the same time, this parsing process is also very dependent on the metadata provided by the contract itself.")]),e._v(" "),a("li",[e._v("The developers of the contract are the majority of the project parties, and most of the chain developers are the project parties of the development chain. Therefore, there will be a big difference in the scenario of managing the private key. In many cases, the private key management related to chain high authority is the node itself, which is relatively small and has a high threshold, or in many cases it relies on multi-signature or voting control. However, there are a wide range of contract developers, and the quality of back-end security management is uneven. On the other hand, many contracts only have a private key to control. Therefore, in the invocation of contract modules, a solution with high security and low threshold is needed in terms of private key management. Therefore, the contract SDK can do special processing in these scenarios to reduce the threshold for the security management of contract developers.")])]),e._v(" "),a("p",[e._v("Therefore, Himalia has a very important reason for existence. Himalia's positioning is similar to Web3J, Web3py, etc. in the Ethereum ecosystem.")]),e._v(" "),a("h2",{attrs:{id:"project-warehouse-address"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-warehouse-address"}},[e._v("#")]),e._v(" Project warehouse address")]),e._v(" "),a("p",[e._v("The contract SDKs in different languages ​​currently provided by Himalia have the following versions:")]),e._v(" "),a("ul",[a("li",[e._v("go: https://github.com/patractlabs/go-patract")]),e._v(" "),a("li",[e._v("python: https://github.com/patractlabs/py-patract")]),e._v(" "),a("li",[e._v("java: Not yet implemented")]),e._v(" "),a("li",[e._v("c#(.net): Not yet implemented")])])])}),[],!1,null,null,null);t.default=n.exports},622:function(e,t,a){"use strict";a.r(t);var o=a(1),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"himalia"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#himalia"}},[e._v("#")]),e._v(" Himalia")]),e._v(" "),a("p",[e._v("Himalia 是 Patract 构建的一系列不同语言的访问链"),a("code",[e._v("pallet-contracts")]),e._v("合约模块的sdk库的总称。对于Substrate而言，已经存在了一些面向不同语言的访问链的sdk。但是由于"),a("code",[e._v("pallet-contracts")]),e._v("模块的特殊性，需要继续构建基于访问链的sdk上的访问合约模块的sdk。其特殊性主要表现在：")]),e._v(" "),a("ul",[a("li",[e._v("合约的部署与调用（包含rpc调用与交易调用）需要依据合约的metadata.json（类似于Solidity的abi文件）提供的信息组装参数的顺序的与编码，而链的metadata只能告知链的sdk该链上存在合约模块的"),a("code",[e._v("instantiate")]),e._v("，"),a("code",[e._v("call")]),e._v("等方法，不可能告知某个合约的调用参数的信息。因此对于合约，需要构建能解析并支持合约metadata的功能。")]),e._v(" "),a("li",[e._v("合约的Event也需要依据合约的metadata.json进行解析。因此若使用链的sdk，只能监听到出现了合约模块的event，但是却无法解析出event中的内容。因此需要提供合约的sdk支持event的监听。")]),e._v(" "),a("li",[e._v("合约的状态（存储）位于子树，且其key的编码与分配方式与runtime不一致。合约存储的key的编码分配方式与该合约所使用的合约语言框架有关（例如Ask!的实现有可能与ink!不一样），因此需要针对不同的合约语言框架实现对应的存储解析方式。同时这个解析过程也十分依赖合约本身提供的metadata。")]),e._v(" "),a("li",[e._v("合约的开发者为广大的项目方，而链的开发者大部分情况下为开发链的项目方。因此在管理私钥的场景方面会出现比较大的区别。很多情况下与链高权限相关的私钥管理为节点自身，数量比较少且门槛高，或者很多情况下都依托于多签或者投票控制。而合约的开发者很广泛，后台安全管理质量参差不齐，另一方面很多合约都只有一个私钥进行控制。因此在对于合约模块的调用上，在私钥管理方面更需要一个高安全低门槛的解决方案。因此合约sdk可以在这些场景上做特殊处理，以减少合约开发者安全管理的门槛。")])]),e._v(" "),a("p",[e._v("因此 Himalia 是有十分重要的存在理由的。Himalia的定位类似于 Ethereum 生态里的 Web3J, Web3py 等等。")]),e._v(" "),a("h2",{attrs:{id:"项目仓库地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目仓库地址"}},[e._v("#")]),e._v(" 项目仓库地址")]),e._v(" "),a("p",[e._v("当前 Himalia 提供的不同语言的合约sdk有如下版本：")]),e._v(" "),a("ul",[a("li",[e._v("go: https://github.com/patractlabs/go-patract")]),e._v(" "),a("li",[e._v("python: https://github.com/patractlabs/py-patract")]),e._v(" "),a("li",[e._v("java: 还未实现")]),e._v(" "),a("li",[e._v("c#(.net): 还未实现")])])])}),[],!1,null,null,null);t.default=n.exports}}]);